Aja como um desenvolvedor de aplicações web. Crie uma aplicação em node.js para coletar dados de uma página da web. A página é essa: https://fbref.com/en/comps/ . Crie um readme.md para essa aplicação. Crie um gitignore para essa aplicação. Crie um script para debug em caso de erros. Crie os artefatos separadamente. Não precisa criar um frontend pois quero executar a aplicação por linha de comando.

A página em questão armazena as informações de interesse em elementos <table>. A página tem vários <table>. Não são todos os <table> que nos interessa. Somente alguns. Como identificar os <table> de interesse: todos <table> com id igual a [comps_club, comps_1_fa_club_league_senior, comps_2_fa_club_league_senior, comps_3_fa_club_league_senior]. 

Como identificar as informações de interesse dentro dos <table>: 
País: <td class="left " data-stat="country"><a href="/en/country/ENG/England-Football"><span class="f-i f-gb-eng" style="">eng</span></a> <a href="/en/country/ENG/England-Football">ENG</a></td>. Obs.: As vezes o <td data-stat="country"></td> estará vazio sem o <a>, ignore essa linha e continue. O país é uma sigla de três letras. Exemplo: ENG, BRA, FRA.
Nome da liga: <th data-stat="league_name><a>Nome da liga</a></th>. 
URL da liga: <td data-stat="maxseason"><a href="URL da liga"></a></td>. Obs.: a url deve vir no seguinte formato: https://fbref.com/en/comps/{id_da_liga}/{nome fantasia da liga}-Stats . A URL a ser salva deve ser no segguinte formato: https://fbref.com/en/comps/{9}/schedule/{nome fantasia da liga}-Scores-and-Fixtures

As ligas estão espalhadas pelas várias <table> da página. Agrupar as ligas por país conforme exemplo a seguir. Alguns países tem mais de uma liga. Alguns países tem apenas uma liga. 

O resultado final esperado é um arquivo. Escolha a extensão do arquivo que melhor se encaixa com o conteúdo a seguir. O conteúdo do arquivo deve estar no seguinte seguinte formato:

const dataset = {
    "pais_1": {
        "nome_liga_1" : "url_da_liga_1",
        "nome_liga_2" : "url_da_liga_2", //se houver liga 2, as vezes não existe liga 2.
    },
    "pais_2": {
        "nome_liga_1" : "url_da_liga_1",
        "nome_liga_2" : "url_da_liga_2", //se houver liga 2, as vezes não existe liga 2.
    },
    ...
}

Exemplo de conteúdo real:

const dataset = {
    "ENG": {
        "Premier League": "https://fbref.com/en/comps/9/schedule/Premier-League-Scores-and-Fixtures",
        "EFL Championship": "https://fbref.com/en/comps/10/schedule/Championship-Scores-and-Fixtures"
    },
    "ESP": {
        "La Liga": "https://fbref.com/en/comps/12/schedule/La-Liga-Scores-and-Fixtures",
        "La Liga 2": "https://fbref.com/en/comps/17/schedule/Segunda-Division-Scores-and-Fixtures"
    },
    "ITA": {
        "Serie A": "https://fbref.com/en/comps/11/schedule/Serie-A-Scores-and-Fixtures",
        "Serie B": "https://fbref.com/en/comps/18/schedule/Serie-B-Scores-and-Fixtures"
    },
    "ALE": {
        "Bundesliga": "https://fbref.com/en/comps/20/schedule/Bundesliga-Scores-and-Fixtures",
        "2. Bundesliga": "https://fbref.com/en/comps/33/schedule/2-Bundesliga-Scores-and-Fixtures"
    },
    "FRA": {
        "Ligue 1": "https://fbref.com/en/comps/13/schedule/Ligue-1-Scores-and-Fixtures",
        "Ligue 2": "https://fbref.com/en/comps/60/schedule/Ligue-2-Scores-and-Fixtures"
    },
    "BRA" : {
        "Série A" : "https://fbref.com/en/comps/24/schedule/Serie-A-Scores-and-Fixtures",
        "Série B" : "https://fbref.com/en/comps/38/schedule/Serie-B-Scores-and-Fixtures"
    }
};